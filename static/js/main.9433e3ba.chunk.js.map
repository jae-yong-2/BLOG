{"version":3,"sources":["My_Study.js","React_study/img/react_start.PNG","React_study/img/react_start1.PNG","React_study/img/react_start2.PNG","React_study/img/react_start3.PNG","React_study/img/react_start4.PNG","React_study/img/react_start5.PNG","React_study/1.js","React_study/2.js","React_study/img/study1_1.PNG","React_study/img/study1_2.PNG","React_study/img/study1_3.PNG","React_study/3.js","React_study/index.js","algorithm/img/4344.PNG","algorithm/1.js","algorithm/img/11650.PNG","algorithm/img/11650_1.PNG","algorithm/2.js","algorithm/img/1018_1.PNG","algorithm/img/1018_2.PNG","algorithm/3.js","algorithm/img/1010.PNG","algorithm/4.js","algorithm/img/1051.PNG","algorithm/5.js","algorithm/img/1037.PNG","algorithm/6.js","algorithm/index.js","Posting.js","Link.js","Home_Page.js","App.js","index.js"],"names":["My_Study","remove_post","title","props","key","className","this","state","map","index","onClick","dangerouslySetInnerHTML","__html","text","Component","App","src","Img1","Img2","Img3","Img6","Img5","change","id","bid","document","getElementById","style","display","innerText","Img","Posting","React_study","Link","href","Home_Page","add_post","indexOf","alert","placeholder","contentEditable","value","innerHTML","site","gotoSite","img","setState","concat","console","log","slice","length","menu","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.9433e3ba.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass My_Study extends Component{\r\n  remove_post=(title)=>{\r\n    this.props.remove_post(title.key)\r\n  }\r\n  render(){\r\n      return (\r\n        <div className=\"My_Study\">\r\n          <p className=\"body\">\r\n          <div>웹페이지를 공부하는 메뉴입니다. 게시판을 만들 계획입니다.</div>\r\n          {this.props.state.title.map((key,index)=>{return (\r\n            <a className=\"list\">{key}<button className=\"button_box\" onClick={()=>{this.remove_post({key})}}>제거</button>\r\n              <div dangerouslySetInnerHTML={ {__html: this.props.state.text[index]} }>\r\n              </div>\r\n            </a>\r\n          )})}\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default My_Study;\r\n","export default __webpack_public_path__ + \"static/media/react_start.e3869c55.PNG\";","export default __webpack_public_path__ + \"static/media/react_start1.5068a6f6.PNG\";","export default __webpack_public_path__ + \"static/media/react_start2.59d16a02.PNG\";","export default __webpack_public_path__ + \"static/media/react_start3.e503b26a.PNG\";","export default __webpack_public_path__ + \"static/media/react_start4.ae367044.PNG\";","export default __webpack_public_path__ + \"static/media/react_start5.4ca4a4af.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img1 from './img/react_start.PNG'\r\nimport Img2 from './img/react_start1.PNG'\r\nimport Img3 from './img/react_start2.PNG'\r\nimport Img4 from './img/react_start3.PNG'\r\nimport Img5 from './img/react_start4.PNG'\r\nimport Img6 from './img/react_start5.PNG'\r\n\r\nclass App extends Component{\r\n    render(){\r\n      return(\r\n        <div className=\"left\">\r\n        <h1>리액트 사용법</h1>\r\n        <h4><br/>\r\n        <div className=\"code\">npm install -g create-react-app<br/><br/>\r\n        create-react-app my-app</div>(my-app은 원하는 이름으로)<br/><br/>\r\n        위의 두 명령어를 실행하면 리액트 파일이 생성된다. 파일을 생성하면 다음과 구조가 같다.<br/><br/>\r\n        <img src={Img1}/>\r\n        <br/><br/>\r\n        리액트가 잘 작동하는지 확인하기 위해 리액트 폴더에서<br/>\r\n        <div className=\"code\">npm run start</div> 명령어를 실행해본다.<br/><br/>\r\n        <img src={Img2}/><br/><br/>\r\n        이와 같이 나오면 제대로 설치가 완료된것이다.<br/><br/>\r\n        이후 src에 들어가서 app.js와 index.js를 제외한 나머지 파일을 지워준다.<br/><br/>\r\n        index.js의 파일의 경우는 다음과 같이 만들어 주고<br/><br/>\r\n        <img src={Img3}/><br/><br/>\r\n        app.js의 파일의 경우는 다음과 같이 만들어 준다.<br/><br/>\r\n        <img src={Img6}/><br/><br/>\r\n        <img src={Img5}/><br/><br/>\r\n        이제 개발을 시작하면 된다. (배경색은 원래는 흰색으로 글자만 나옵니다.)<br/><br/>\r\n        </h4>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","import React,{Component} from 'react'\r\nimport Img1 from './img/react_start2.PNG'\r\nimport Img2 from './img/react_start3.PNG'\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>리액트의 기본</h1>\r\n      <h4>이번 포스팅에서는 리액트의 기본적인 이해를 하기 위한 포스팅이다.<br/><br/>\r\n      리액트는 html과 js를 같이 사용할 수 있는 jsx를 사용하게 된다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이와 같이 index.js에서 App이라는 컴포넌트를 불러와 랜더링하게 되는데, 이때 App의 코드는 아래와 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      여기서 return 부분에서 js와 html을 사용하게 되면 그에 맞게 렌더링을 하고 이를 index.js에서 다시 렌더링을 통해 웹페이지를 보여준다.<br/><br/>\r\n      리턴되는 컴포넌트는 하나여야하기 때문에 div태그와 같은 것으로 한번에 다 감싼후 그 안에서 코드를 짜는 것이 바람직한 것 같다.<br/><br/>\r\n      중괄호는 js코드나 문자열과 변수의 합과 같이 다양하게 사용할 수 있어 나중에 state나 props를 활용할때 유용하게 사용된다.<br/><br/>\r\n      이제부터 현재 보고있는 이 블로그를 개발하면서 공부하게된 내용들을 포스팅해 나갈 계획이다.<br/><br/> 이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/study1_1.8dea8a51.PNG\";","export default __webpack_public_path__ + \"static/media/study1_2.35b7e059.PNG\";","export default __webpack_public_path__ + \"static/media/study1_3.5663532e.PNG\";","import React,{Component} from 'react'\r\nimport '../App.js'\r\nimport Img1 from './img/study1_1.PNG'\r\nimport Img2 from './img/study1_2.PNG'\r\nimport Img3 from './img/study1_3.PNG'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 메뉴창 만들기</h1>\r\n      <h4>\r\n      가장 먼저 블로그를 구상하기 위해서 구조를 어떻게 할 것 인가를 생각해 보자.<br/><br/>\r\n      먼저 가장 먼저 생각한 것은 페이지 이동없이 한 페이지 안에서 모든 것을 볼 수 있는 블로그였다.<br/><br/>\r\n      이를 위해서는 리액트 라우터를 사용해야 한다. 하지만 최대한 리액트 자체만의 구현을 하기위해 사용하지않았다.<br/><br/>\r\n      구조는 다음과 같이 구상했다.\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      우선 index.js에서 app.js를 보여주고 app.js에서 모든 메뉴를 관리하는 구조로 구상이 되었다.<br/><br/>\r\n      이제 app.js에서 관리해주는 각각의 메뉴 페이지는 각자 자신의 리스트를 갖고 리스트를 관리한다.<br/><br/>\r\n      이를 수행하기 위해서는 기본적으로 리액트의 state를 이해해야 수행할 수 있다.<br/><br/>\r\n      <h3>state란?</h3>\r\n      state는 컴포넌트의 특성 상태를 화면에 동적으로 반영해주는 기능을 위한 객체이다. 컴포넌트가 독립적으로 갖는 상태인것인다.<br/><br/>\r\n      사용 예시는 다음과 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      이렇게 사용된 state는 setState함수를 통해 변경을 할 수 있는데, 변화되는 즉각 반응하여 웹사이트에 보여진다.<br/><br/>\r\n      이를 사용하여 메뉴를 클릭하면 클릭에 따라 각각에 맞는 state를 변화시켜 그 컴포넌트를 보여주는 작업을 하게 된다.<br/><br/>\r\n      이렇게 메뉴창을 클릭할 때 마다 그에 맞는 컴포넌트를 보여주도록 하면 되는데 state에 이동할 메뉴의 리스트와 현재 메뉴상태를 나타내는 정보를 준다.<br/><br/>\r\n      이후 map함수와 onClick을 통해서 메뉴를 바꿔주는 함수를 실행하고 클릭마다 상태를 변환해준다.<br/><br/>\r\n      위의 이미지가 첫번째 버튼은 버튼을 클릭하기전이고, 두번째 버튼이 버튼을 클릭한 후이다.<br/><br/>\r\n      구현된 메뉴창은 다음과 같고 map함수를 통해 상태에서 페이지 이름을 setState에 보내주어 클릭마다 상태를 변경해준다.<br/><br/>\r\n      render아래 두줄은 다음 포스팅때 설명하겠다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      이렇게 구현된 페이지는 현재 보고있는 블로그의 메뉴처럼 작동하게 된다.<br/><br/>\r\n      이상 포스팅 끝\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport List1 from './1.js'\r\nimport List2 from './2.js'\r\nimport List3 from './3.js'\r\n\r\nclass App extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n    render(){\r\n      return(\r\n        <div>\r\n            <li className=\"list\">리액트 시작<button className=\"button_box\" id=\"React_button1\" onClick = {()=>{this.change(\"React_study1\",\"React_button1\")}}>보기</button></li>\r\n            <div id=\"React_study1\" className=\"post_list\"><List1/></div>\r\n\r\n            <li className=\"list\">리액트의 기본<button className=\"button_box\" id=\"React_button2\" onClick = {()=>{this.change(\"React_study2\",\"React_button2\")}}>보기</button></li>\r\n            <div id=\"React_study2\" className=\"post_list\"><List2/></div>\r\n\r\n            <li className=\"list\">블로그 만들기 1<button className=\"button_box\" id=\"React_button3\" onClick = {()=>{this.change(\"React_study3\",\"React_button3\")}}>보기</button></li>\r\n            <div id=\"React_study3\" className=\"post_list\"><List3/></div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/4344.dadf33d5.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img from './img/4344.PNG'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>평균은 넘겠지<h3>(정답률 : 37.470%)</h3></h1>\r\n      <h4>\r\n      백준 4344번 문제로 평균을 넘는 학생의 수를 구하는 것이다.<br/><br/>\r\n      이 문제는 배열로 간단히 풀 수 있지만 C++에서 사용하는 vector기능을 이용하여 풀어 보았다.<br/><br/>\r\n      코드는 다음과 같다.\r\n      <br/><br/>\r\n      <img src={Img} className='code'/>\r\n      <br/><br/>\r\n      vector는\r\n      <div className=\"code\">#include &lt;vector&gt;</div>\r\n      <br/><br/>\r\n      이렇게 불러와야 사용할 수 있고\r\n      <div className=\"code\">\r\n      std::vector&lt;vector&gt; v(number);\r\n      </div>\r\n      <br/><br/>\r\n      이렇게 선언했을 때, v는 변수명, number은 백터의 사이즈 int는 자료형에 해당한다.<br/><br/>\r\n      가장 많이 쓰이는 함수 위주로 정리를 하자면<br/><br/>\r\n      <div className=\"code\">\r\n      v.front();<br/><br/>\r\n      v.back();<br/><br/>\r\n      v.push_back(number);<br/><br/>\r\n      v.pop_back();<br/><br/>\r\n      v.begin();<br/><br/>\r\n      v.end();<br/><br/>\r\n      v.size();<br/><br/>\r\n      </div><br/><br/>\r\n      위주로 사용하고, 각각 벡터의 맨처음, 마지막 잠초, 마지막 원소뒤에 number삽입, 마지막 원소 제거,\r\n      벡터 처음과 마지막 가르키기(iterater), 벡터의 사이즈반환이다.<br/><br/>\r\n      <div className=\"code\">std::accumulate(start,end,0);</div><br/><br/>\r\n      의 경우에는 벡터의 평균을 구할 때, 총합을 구하기 위해서 사용하는 코드로\r\n      <div className=\"code\">#include&lt;numeric&gt;</div><br/><br/>\r\n      에서 불러와 사용하며, 백터의 시작, 끝, 자료형으로 생각하여 사용하면 된다.\r\n      이상 벡터에 대해 알아보았다.<br/><br/>이 문제의 경우 알고리즘적으로 어려운 것은 없으니 풀이는 생략한다.\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/11650.56ccb84e.PNG\";","export default __webpack_public_path__ + \"static/media/11650_1.60c2219c.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img1 from './img/11650.PNG'\r\nimport Img2 from './img/11650_1.PNG'\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>좌표 정렬하기<h3>(정답률 : 48.847%)</h3></h1>\r\n      <h4>백준 11650번 문제로 주어진 좌표를 정렬하는 문제이다. 이 문제는 여러 방법으로 풀 수 있지만<br/><br/>\r\n      c++언어에서 제공해주는 vector와 pair기능 그리고 sort기능을 이용하면 아주 간단하게 풀 수 있다.<br/><br/>\r\n      코드는 다음과 같다.<br/><br/>\r\n      <img src={Img1}className=\"code\"/><br/><br/>\r\n      여기서 vector는 저번 포스팅에서 이미한 상태로 no.4344를 참고하면 된다. 이번 포스팅은 pair를 위주로 포스팅을 한다.<br/><br/>\r\n      pair는 header 파일이 utility이며 서로다른 자료형을 묶어두는 구조체이다.<br/><br/>\r\n      <div className=\"code\">#include&lt;utility&gt;</div><br/><br/> 이렇게 호출하여 사용하며 선언은 아래와 같다.\r\n      <div className=\"code\">std::pair&lt;&lt;Class T&gt;,&lt;Class T&gt;&gt; name;</div>\r\n      pair의 경우는 좀 특이하게 std::make_pair()라는 함수를 사용하여 값을 넣어주는데, 사용법은 아래와 같다.\r\n      <div className=\"code\">name=std::make_pair(v1,v2);</div><br/><br/>\r\n      위의 알고리즘 문제에서는 벡터의 자료형을 pair 자체로 두어 좌표를 벡터의 하나의 저장공간에 넣는 것이다.<br/><br/>\r\n      여기서 벡터는 sort함수를 통해서 문제에서 원하는대로 정렬이 가능하다.<br/><br/> 이때 난 저번 포스팅에서는 알지 못했던 sort의 기능을 하나 알았다.<br/><br/>\r\n      그건 정렬하는 방법을 사용자가 직접 정해주는 방법이었는데, 함수를 새로 정의해서 sort의 세번째 parameter에 넣어주면 그 함수의 반환값에 <br/><br/>따라서 자동으로 정렬되는 기능이다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      이렇게 비교해주는 함수를 사용후에 다음과 같이 코드를 작성하면,\r\n      <div className=\"code\">std::sort(v.begin(),v.end(),cmp);</div>\r\n      문제에서 원하는 값이 나오게 된다. 이상 포스팅 끝.\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","export default __webpack_public_path__ + \"static/media/1018_1.072f5ce7.PNG\";","export default __webpack_public_path__ + \"static/media/1018_2.0dd60a17.PNG\";","import React,{Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1018_1.PNG'\r\nimport Img2 from './img/1018_2.PNG'\r\nclass App extends Component{\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n        <h1>체스판 다시 칠하기<h3>(정답률 : 46.526%)</h3></h1>\r\n        <h4>\r\n        이번 문제는 단순 알고리즘 문제이다. 입력받은 체스판에서 8*8모양으로 추출한 후 체스판의 규격에 맞게<br/><br/>\r\n        색칠을 다시 해주고, 이렇게 색칠된 횟수를 계산하여 가장 적게 색칠할 수 있는 횟수를 찾는게 풀이이다.<br/><br/>\r\n        처음 문제를 보고, python을 활용하여 문제를 풀면 쉽게 풀릴 것으로 생각이 되었다.<br/><br/>\r\n        하지만 C++을 이용하여 문제를 풀어보았다.<br/><br/>\r\n        가장 먼저 떠오른 아이디어는 이미지처리에서 사용하는 필터의 개념이었다. 입력받은 값을 이미지의 값으로<br/><br/>\r\n        생각을 하고 필터가 돌면서 색칠해야하는 경우(처음이 검은색, 처음이 흰색)중 작은 값을 선택하고, 이전의<br/><br/>\r\n        최소값과 비교해 값을 가져가는 방식으로 해보았다.<br/><br/>\r\n        먼저 흰색, 검은색 보드를 선언해 주었다.<br/><br/>\r\n        <img src={Img1} className=\"code\"/><br/><br/>\r\n        이렇게 필터(보드)를 만들어 주고 각 이미지를 돌면서 비교를 한다.<br/><br/>\r\n        아래는 핵심 알고리즘이다.<br/><br/>\r\n        <img src={Img2} className=\"code\"/><br/><br/>\r\n        두가지 필터를 돌면서 최소값을 찾아주고, 이전의 최소값과 비교하여 최종값을 반환한다.<br/><br/>\r\n        문제 차제는 난이도가 어렵지않지많, 시간을 줄이기를 신경쓴다면 어렵게 풀수 있을것 같다.<br/><br/>\r\n        또 문제를 처음에 잘못읽어 어렵게 풀었는데, 다음부터는 문제를 잘 읽어야겠다. 이상 포스팅 끝<br/><br/>\r\n\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","export default __webpack_public_path__ + \"static/media/1010.19fd6053.PNG\";","import React,{Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1010.PNG'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>다리 놓기<h3>(정답률 : 48.517%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 다리놓기 문제로 양쪽에 목적지를 갖고, 다리가 겹치지 않게 놓을 때의 경우의 수를 구하는 문제이다.<br/><br/>\r\n      문제를 읽었을 때는 어려워 보이지만 조금만 생각해보면 순열공식을 이용한다면 금방 풀 수 있는 문제이다.<br/><br/>\r\n      문제 조건이 0 &lt; N &lt;=M &lt; 30 이므로 조합공식인 mPn을 이용한다.<br/><br/>\r\n      이를 간단하게 풀면 M!/(M-N)!N! 로 볼 수 있다.<br/><br/>\r\n      아래는 알고리즘이다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      단순히 M!, (M-N)!, N!를 각각 따로 계산하면 오버플로가 발생하기 때문에 반복문을 돌 때 값을 나누는 작업을 동시에 해줘야한다.<br/><br/>\r\n      반복문을 돌면서 1부터 M을 곱하는 동시에 1부터 N과 1부터 M-N을 나눠 주는 작업을 반복문 한번을 돌면서 실행한다.<br/><br/>\r\n      문제가 요구하는게 빠른 계산이기 때문에 재귀함수와 같이 시간이 오래 걸리는 알고리즘은 가급적 피해주었다. 이상 포스팅 끝 <br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/1051.bca3ab04.PNG\";","import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1051.PNG'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>숫자 정사각형<h3>(정답률 : 37.492%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 주어진 직사각형(N*M)안에 입력받은 정수가 모든 칸을 차지하고 있다.<br/><br/>\r\n      이 직사각형 안에서는 정사각형이 존재하는데, 이 정사각형의 꼭짓점에 숫자 4개가 모두 같은 정사각형 중에 가장 큰 정사각형의 크기를 구하면된다.<br/><br/>\r\n      예를 들어 다음과 같이 입력이 되었을 때, 9라는 값이 출력되어야 한다.<br/><br/>\r\n      <div className='code'>3 5<br/>42101<br/>22100<br/>22101</div>\r\n      이때 생각한 알고리즘은 이미지프로세싱에서 사용하는 필터의 개념을 생각 하였다.<br/><br/>\r\n      핵심 알고리즘의 코드는 다음과 같다.\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      N과 M 중 작은 숫자를 정사각형의 최대 크기로 잡고, 직사각형안을 순회한다.<br/><br/>\r\n      순회 후 조건에 맞는 정사각형이 없을 경우 변의 길이를 1씩 감소시키면서 처음부터 반복한다.<br/><br/>\r\n      이렇게 찾게되면 변의 길이를 제곱하여 반환을 하면, 원하는 값이 나온다.<br/><br/>\r\n      이번 문제는 어렵지는 않지만, 정사각형이 직사각형 안을 돌아 다닐때, 인덱스를 주의해야한다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/1037.255c6160.PNG\";","import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1037.PNG'\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>약수<h3>(정답률 : 49.574%)</h3></h1>\r\n      <h4>이번 문제는 양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.<br/><br/>\r\n      어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.라는 문제이다. 생각해보면 매우 간단한 문제이다.<br/><br/>\r\n      약수의 개수가 짝수개 나오면 중간의 2개를 곱한 값이 N이 될것이고, 홀수일 경우 중간의 값을 제곱하면 N이 될것이다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      코드는 위와 같다.<br/><br/>\r\n      이 문제는 조금만 생각하면 금방 풀 수 있는 문제 코드만 봐도 금방 이해할 수 있다.<br/><br/>\r\n      이상 포스팅 끝\r\n\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport List1 from './1.js'\r\nimport List2 from './2.js'\r\nimport List3 from './3.js'\r\nimport List4 from './4.js'\r\nimport List5 from './5.js'\r\nimport List6 from './6.js'\r\n\r\nclass App extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n    render(){\r\n      return(\r\n        <div>\r\n\r\n            <li className=\"list\">백준 no.4344<button className=\"button_box\" id=\"Algorithm_button1\" onClick = {()=>{this.change(\"beackjoon1\",\"Algorithm_button1\")}}>보기</button></li>\r\n            <div id=\"beackjoon1\" className=\"post_list\"><List1/></div>\r\n\r\n            <li className=\"list\">백준 no.11650<button className=\"button_box\" id=\"Algorithm_button2\" onClick = {()=>{this.change(\"beackjoon2\",\"Algorithm_button2\")}}>보기</button></li>\r\n            <div id=\"beackjoon2\" className=\"post_list\"><List2/></div>\r\n\r\n            <li className=\"list\">백준 no.1018<button className=\"button_box\" id=\"Algorithm_button3\" onClick = {()=>{this.change(\"beackjoon3\",\"Algorithm_button3\")}}>보기</button></li>\r\n            <div id=\"beackjoon3\" className=\"post_list\"><List3/></div>\r\n\r\n            <li className=\"list\">백준 no.1010<button className=\"button_box\" id=\"Algorithm_button4\" onClick = {()=>{this.change(\"beackjoon4\",\"Algorithm_button4\")}}>보기</button></li>\r\n            <div id=\"beackjoon4\" className=\"post_list\"><List4/></div>\r\n\r\n            <li className=\"list\">백준 no.1051<button className=\"button_box\" id=\"Algorithm_button5\" onClick = {()=>{this.change(\"beackjoon5\",\"Algorithm_button5\")}}>보기</button></li>\r\n            <div id=\"beackjoon5\" className=\"post_list\"><List5/></div>\r\n\r\n            <li className=\"list\">백준 no.1037<button className=\"button_box\" id=\"Algorithm_button6\" onClick = {()=>{this.change(\"beackjoon6\",\"Algorithm_button6\")}}>보기</button></li>\r\n            <div id=\"beackjoon6\" className=\"post_list\"><List6/></div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport React_study from './React_study'\r\nimport Algorithm from './algorithm'\r\nclass Posting extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n    }\r\n  }\r\n  render(){\r\n      return (\r\n        <div className=\"Posting\">\r\n\r\n          <button className=\"post_body\" id=\"react_button\" onClick = {()=>{this.change(\"study1\",\"react_button\")}}>리액트 공부</button>\r\n          <div id=\"study1\" className=\"post_menu\"><React_study/></div>\r\n\r\n          <button className=\"post_body\" id=\"django_button\" onClick = {()=>{this.change(\"study2\",\"django_button\")}}>장고 공부</button>\r\n          <div id=\"study2\" className=\"post_menu\">nothing</div>\r\n\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study3\",\"test\")}}>알고리즘 공부</button>\r\n          <div id=\"study3\" className=\"post_menu\"><Algorithm/></div>\r\n\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study4\",\"test\")}}>빈 공간</button>\r\n          <div id=\"study4\" className=\"post_menu\">nothing</div>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass Link extends Component{\r\n  render(){\r\n      return (\r\n        <div className=\"Link\">\r\n          <p className=\"body\">\r\n            <div>저의 깃허브 페이지와 여러 sns 사이트 링크입니다.</div><br/>\r\n            <a href=\"https://github.com/jae-yong-2\"><button className=\"button_link\">GIT_HUB</button></a><br/>\r\n            <a href=\"facebook.com/ljy8972\"><button className=\"button_link\">FACEBOOK</button></a><br/>\r\n            <a href=\"https://www.instagram.com/jae_yong_lee_/\"><button className=\"button_link\">INSTAGRAM</button></a>\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass Home_Page extends Component{\r\n  add_post=(title,text)=>{                    //중복인지를 확인해주고 app의 백엔드에 넣어줌\r\n    if(this.props.state.title.indexOf(title)>=0){\r\n      alert(\"중복된 제목이 있습니다.\")\r\n    }else {\r\n      this.props.add_post(title,text)\r\n    }\r\n  }\r\n  render(){\r\n\r\n      return (\r\n        <div className=\"Home_Page\">\r\n          <p className=\"body\">\r\n            저를 소개합니다.\r\n            <br/>저는 충남대학교 컴퓨터공학과 이재용입니다.\r\n            <br/>이 블로그는 제가 어떤 공부를 했는지 모여주는 블로그입니다.\r\n            <br/>공부했던 내용은 posting항목에서 확인 가능합니다.\r\n            <br/>아래는 게시판 등록으로 활용할 것으로 My_Study와 함께 웹공부를 할 것 입니다.\r\n            <br/>\r\n            <input className='title_box' id='title' placeholder=\"title\"/><br/>\r\n            <div className='content_box' contentEditable=\"true\" id='content' placeholder=\"content\"></div>\r\n              <button className='button_box' onClick={()=>{{\r\n                this.add_post(document.getElementById('title').value, document.getElementById('content').innerHTML);\r\n              }}}>등록</button>\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home_Page;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport My_Study from './My_Study.js';\r\nimport Posting from './Posting.js';\r\nimport Link from './Link.js';\r\nimport Home_Page from './Home_Page.js';\r\n\r\nclass App extends Component{\r\n  state={\r\n    site: 'Home_Page',\r\n    gotoSite: ['Home_Page','Posting','My_Study','Link'],\r\n    title:[],\r\n    text:[],\r\n    img:[],\r\n  };\r\n  add_post = (title,text)=>{                      //상태를 변경함 백엔드 연동시 거기에 정보를 넣어야함\r\n    this.setState(\r\n      {\r\n        title: this.state.title.concat(title),\r\n        text: this.state.text.concat(text)\r\n      }\r\n    );\r\n    console.log(text);\r\n  }\r\n  remove_post=(key)=>{                        //등록정보를 지울수있음\r\n    var index=this.state.title.indexOf(key)\r\n    this.setState({\r\n      title:this.state.title.slice(0,index).concat(this.state.title.slice(index+1, this.state.title.length)),\r\n      text:this.state.text.slice(0,index).concat(this.state.text.slice(index+1, this.state.text.length)),\r\n    });\r\n  }\r\n  Home_Page = (text) =>{\r\n    this.setState({\r\n      site: text\r\n    });\r\n  }\r\n  menu=this.state.gotoSite.map((site,key)=>{return <a className=\"button_css col-md-3\" onClick={()=>{this.Home_Page(site)}}>{site}</a>})\r\n\r\n  render(){\r\n    const htmlTitle = document.querySelector(\"title\"); // <title> 태그 찾기\r\n    htmlTitle.innerText = this.state.site;\r\n\r\n\r\n    if(this.state.site=='Home_Page'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Home_Page/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Posting'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Posting/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='My_Study'){\r\n      return (\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <My_Study remove_post={this.remove_post}state={this.state}/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Link'){\r\n      return(\r\n        <div id='Link'className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Link/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}