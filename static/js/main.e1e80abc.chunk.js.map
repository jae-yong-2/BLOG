{"version":3,"sources":["My_Study.js","React_study/img/react_start.PNG","React_study/img/react_start1.PNG","React_study/img/react_start2.PNG","React_study/img/react_start3.PNG","React_study/img/react_start4.PNG","React_study/img/react_start5.PNG","React_study/Posting1.jsx","React_study/Posting2.jsx","React_study/img/study1_1.PNG","React_study/img/study1_2.PNG","React_study/img/study1_3.PNG","React_study/Posting3.jsx","React_study/img/study2_1.PNG","React_study/img/study2_3.PNG","React_study/img/study2_2.PNG","React_study/img/study2_4.PNG","React_study/img/study2_5.PNG","React_study/Posting4.jsx","React_study/img/study3_1.PNG","React_study/img/study5_2.PNG","React_study/img/study3_2.PNG","React_study/Posting5.jsx","React_study/img/study4_1.PNG","React_study/img/study4_2.PNG","React_study/img/study5_1.PNG","React_study/Posting6.jsx","React_study/index.js","algorithm/img/4344.PNG","algorithm/Posting1.jsx","algorithm/img/11650.PNG","algorithm/img/11650_1.PNG","algorithm/Posting2.jsx","algorithm/img/1018_1.PNG","algorithm/img/1018_2.PNG","algorithm/Posting3.jsx","algorithm/img/1010.PNG","algorithm/Posting4.jsx","algorithm/img/1051.PNG","algorithm/Posting5.jsx","algorithm/img/1037.PNG","algorithm/Posting6.jsx","algorithm/listOfContents.js","algorithm/index.jsx","Posting.js","Link.js","Home_Page.js","App.js","index.js"],"names":["My_Study","remove_post","title","props","key","change","id","bid","document","getElementById","style","display","innerText","className","this","state","map","index","onClick","dangerouslySetInnerHTML","__html","text","Component","Posting1","src","Img1","Img2","Img3","Img6","Img5","Posting2","Posting3","Posting4","Img4","Posting6","App","Img","Posting5","List","content","i","idx","Posting","React_study","Link","href","Home_Page","add_post","indexOf","alert","placeholder","contentEditable","value","innerHTML","site","gotoSite","img","setState","concat","slice","length","menu","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.e1e80abc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nclass My_Study extends Component{\r\n  remove_post=(title)=>{\r\n    this.props.remove_post(title.key)\r\n  }\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"My_Study\">\r\n          <p className=\"body\">\r\n          <div>웹페이지를 공부하는 메뉴입니다. 게시판을 만들 계획입니다.</div>\r\n          {this.props.state.title.map((key,index)=>{return (\r\n            <div className=\"list\">{key}\r\n              <button className=\"button_box\" id={key} onClick = {()=>{this.change(index,key)}}>보기</button>\r\n              <button className=\"button_box\" onClick={()=>{this.remove_post({key})}}>제거</button>\r\n              <div id={index} style={{display:\"none\"}}dangerouslySetInnerHTML={ {__html: this.props.state.text[index]} }>\r\n              </div>\r\n            </div>\r\n          )})}\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default My_Study;\r\n","export default __webpack_public_path__ + \"static/media/react_start.e3869c55.PNG\";","export default __webpack_public_path__ + \"static/media/react_start1.5068a6f6.PNG\";","export default __webpack_public_path__ + \"static/media/react_start2.59d16a02.PNG\";","export default __webpack_public_path__ + \"static/media/react_start3.e503b26a.PNG\";","export default __webpack_public_path__ + \"static/media/react_start4.ae367044.PNG\";","export default __webpack_public_path__ + \"static/media/react_start5.4ca4a4af.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img1 from './img/react_start.PNG'\r\nimport Img2 from './img/react_start1.PNG'\r\nimport Img3 from './img/react_start2.PNG'\r\nimport Img4 from './img/react_start3.PNG'\r\nimport Img5 from './img/react_start4.PNG'\r\nimport Img6 from './img/react_start5.PNG'\r\n\r\nclass Posting1 extends Component{\r\n    render(){\r\n      return(\r\n        <div className=\"left\">\r\n        <h1>리액트 사용법</h1>\r\n        <h4><br/>\r\n        <div className=\"code\">npm install -g create-react-app<br/><br/>\r\n        create-react-app my-app</div>(my-app은 원하는 이름으로)<br/><br/>\r\n        위의 두 명령어를 실행하면 리액트 파일이 생성된다. 파일을 생성하면 다음과 구조가 같다.<br/><br/>\r\n        <img src={Img1}/>\r\n        <br/><br/>\r\n        리액트가 잘 작동하는지 확인하기 위해 리액트 폴더에서<br/>\r\n        <div className=\"code\">npm run start</div> 명령어를 실행해본다.<br/><br/>\r\n        <img src={Img2}/><br/><br/>\r\n        이와 같이 나오면 제대로 설치가 완료된것이다.<br/><br/>\r\n        이후 src에 들어가서 app.js와 index.js를 제외한 나머지 파일을 지워준다.<br/><br/>\r\n        index.js의 파일의 경우는 다음과 같이 만들어 주고<br/><br/>\r\n        <img src={Img3}/><br/><br/>\r\n        app.js의 파일의 경우는 다음과 같이 만들어 준다.<br/><br/>\r\n        <img src={Img6}/><br/><br/>\r\n        <img src={Img5}/><br/><br/>\r\n        이제 개발을 시작하면 된다. (배경색은 원래는 흰색으로 글자만 나옵니다.)<br/><br/>\r\n        </h4>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default Posting1;\r\n","import React,{Component} from 'react'\r\nimport Img1 from './img/react_start2.PNG'\r\nimport Img2 from './img/react_start3.PNG'\r\nclass Posting2 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>리액트의 기본</h1>\r\n      <h4>이번 포스팅에서는 리액트의 기본적인 이해를 하기 위한 포스팅이다.<br/><br/>\r\n      리액트는 html과 js를 같이 사용할 수 있는 jsx를 사용하게 된다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이와 같이 index.js에서 App이라는 컴포넌트를 불러와 랜더링하게 되는데, 이때 App의 코드는 아래와 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      여기서 return 부분에서 js와 html을 사용하게 되면 그에 맞게 렌더링을 하고 이를 index.js에서 다시 렌더링을 통해 웹페이지를 보여준다.<br/><br/>\r\n      리턴되는 컴포넌트는 하나여야하기 때문에 div태그와 같은 것으로 한번에 다 감싼후 그 안에서 코드를 짜는 것이 바람직한 것 같다.<br/><br/>\r\n      중괄호는 js코드나 문자열과 변수의 합과 같이 다양하게 사용할 수 있어 나중에 state나 props를 활용할때 유용하게 사용된다.<br/><br/>\r\n      이제부터 현재 보고있는 이 블로그를 개발하면서 공부하게된 내용들을 포스팅해 나갈 계획이다.<br/><br/> 이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting2;\r\n","export default __webpack_public_path__ + \"static/media/study1_1.8dea8a51.PNG\";","export default __webpack_public_path__ + \"static/media/study1_2.35b7e059.PNG\";","export default __webpack_public_path__ + \"static/media/study1_3.5663532e.PNG\";","import React,{Component} from 'react'\r\nimport '../App.js'\r\nimport Img1 from './img/study1_1.PNG'\r\nimport Img2 from './img/study1_2.PNG'\r\nimport Img3 from './img/study1_3.PNG'\r\n\r\nclass Posting3 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 메뉴창 만들기</h1>\r\n      <h4>\r\n      가장 먼저 블로그를 구상하기 위해서 구조를 어떻게 할 것 인가를 생각해 보자.<br/><br/>\r\n      먼저 가장 먼저 생각한 것은 페이지 이동없이 한 페이지 안에서 모든 것을 볼 수 있는 블로그였다.<br/><br/>\r\n      이를 위해서는 리액트 라우터를 사용해야 한다. 하지만 최대한 리액트 자체만의 구현을 하기위해 사용하지않았다.<br/><br/>\r\n      구조는 다음과 같이 구상했다.\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      우선 index.js에서 app.js를 보여주고 app.js에서 모든 메뉴를 관리하는 구조로 구상이 되었다.<br/><br/>\r\n      이제 app.js에서 관리해주는 각각의 메뉴 페이지는 각자 자신의 리스트를 갖고 리스트를 관리한다.<br/><br/>\r\n      이를 수행하기 위해서는 기본적으로 리액트의 state를 이해해야 수행할 수 있다.<br/><br/>\r\n      <h3>state란?</h3>\r\n      state는 컴포넌트의 특성 상태를 화면에 동적으로 반영해주는 기능을 위한 객체이다. 컴포넌트가 독립적으로 갖는 상태인것인다.<br/><br/>\r\n      사용 예시는 다음과 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      이렇게 사용된 state는 setState함수를 통해 변경을 할 수 있는데, 변화되는 즉각 반응하여 웹사이트에 보여진다.<br/><br/>\r\n      이를 사용하여 메뉴를 클릭하면 클릭에 따라 각각에 맞는 state를 변화시켜 그 컴포넌트를 보여주는 작업을 하게 된다.<br/><br/>\r\n      이렇게 메뉴창을 클릭할 때 마다 그에 맞는 컴포넌트를 보여주도록 하면 되는데 state에 이동할 메뉴의 리스트와 현재 메뉴상태를 나타내는 정보를 준다.<br/><br/>\r\n      이후 map함수와 onClick을 통해서 메뉴를 바꿔주는 함수를 실행하고 클릭마다 상태를 변환해준다.<br/><br/>\r\n      위의 이미지가 첫번째 버튼은 버튼을 클릭하기전이고, 두번째 버튼이 버튼을 클릭한 후이다.<br/><br/>\r\n      구현된 메뉴창은 다음과 같고 map함수를 통해 상태에서 페이지 이름을 setState에 보내주어 클릭마다 상태를 변경해준다.<br/><br/>\r\n      render아래 두줄은 다음 포스팅때 설명하겠다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      이렇게 구현된 페이지는 현재 보고있는 블로그의 메뉴처럼 작동하게 된다.<br/><br/>\r\n      이상 포스팅 끝\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting3;\r\n","export default __webpack_public_path__ + \"static/media/study2_1.460d2ae8.PNG\";","export default __webpack_public_path__ + \"static/media/study2_3.c17d8dfd.PNG\";","export default __webpack_public_path__ + \"static/media/study2_2.6e481034.PNG\";","export default __webpack_public_path__ + \"static/media/study2_4.7cf51623.PNG\";","export default __webpack_public_path__ + \"static/media/study2_5.876d4679.PNG\";","import React,{Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/study2_1.PNG'\r\nimport Img2 from './img/study2_2.PNG'\r\nimport Img3 from './img/study2_3.PNG'\r\nimport Img4 from './img/study2_4.PNG'\r\nimport Img5 from './img/study2_5.PNG'\r\n\r\nclass Posting4 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>Home_Page만들기</h1>\r\n      <h3>map함수와 페이지 제목바꾸기</h3>\r\n      <h4>\r\n      Home_Page만들기에 앞서서 Home_Page와 별개로 저번 포스팅의 map함수와 htmlTitle.innerText에 대해 설명하겠다.<br/><br/>\r\n      map함수의 경우 state에 list값이 많을 경우에 중복된 코드 방지에 사용하기에 적합하다.<br/><br/>\r\n      사용법은 다음과 같다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이렇게 this.state.value의 값을 map함수를 통해 호출하는 것이다. 갯수가 적을 때는 문제가없지만, list가 셀수없이 늘어나면 아주 효율적인 코드이다.<br/><br/>\r\n      e가 value에 있는 리스트의 값을 하나씩 돌면서 모든 값을 호출해 주는것을 볼 수 있다.<br/><br/>\r\n      다음은 htmlTitle.innerText코드이다. 이는 메뉴창 이동마다 홈페이지 타이틀을 변경해주는 코드이고 사용법은 다음과 같다.<br/><br/>\r\n      <div className=\"code\">\r\n      const htmlTitle = document.querySelector(\"title\");<br/><br/>\r\n      htmlTitle.innerText = this.state.site;</div><br/><br/>\r\n      htmlTitle이라는 변수에 title아이디 값을 가진 쿼리 엘리먼트를 가져와 저장한다.<br/><br/>\r\n      그리고 htmlTitle.innerText를 이용해서 상태가 변할때마다 값을 변경해준다.<br/><br/>\r\n      다음은 홈페이지를 만드는 코드이다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      먼저 블로그의 기본적인 설명으로 시작하여, 홈페이지에는 리액트에 여러가지 공부에서 활용할 것이며 My_Study와 연동하여 쓸 것으로 처음에는 props를 이해하기 위해\r\n      값을 props로 My_Study에 보내서 값을 확인 할 수 있게 하였다.<br/><br/>\r\n      <img src={Img4} className=\"code\"/><br/><br/>\r\n      getElementById함수로 title과 text부분의 값들을 가져와 주고, 이를 add_post함수를 통해 보내주게 되는것 이다. add_post의 경우 props를 통해 App.js에서 보내준 함수이다.<br/><br/>\r\n      <img src={Img5} className=\"code\"/><br/><br/>\r\n      App.js에서 데이터를 관리하며 이 데이터는 Home_Page에서 직접관리할 수 없다.<br/><br/>\r\n      이 데이터를 수정하기 위한 방법은 App.js에서 만든 add_post를 Home_Page에 보내서 관리를 해줘야한다.<br/><br/>\r\n      Home_Page에서 만든 함수는 App.js에서 받은 데이터를 직접 수정할 수 없기 때문에 App.js에서 데이터를 관리하는 함수를 받아 간접적으로 수정하는 방식이다.<br/><br/>\r\n      add_post함수는 App.js에 있는 state 값에 concat함수를 통해 리스트를 입력받는대로 늘려준다.<br/><br/>\r\n      이렇게 App.js에 추가된 데이터는 다시 props로 My_Study에 값을 보내준다.<br/><br/>\r\n      Home_Page.js에서 App.js로 App.js에서 My_Study.js로 입력한 값을 보내주게 된다.<br/><br/>\r\n      <div className=\"code\">&lt;Home_Page add_post=&#123;this.add_post&#125;state=&#123;this.state&#125;/&gt;</div>\r\n      이런 코드로 this.add_post를 My_Study컴포넌트에 메세지로 보내준다.<br/><br/>\r\n      다음 포스팅은 이렇게 보낸 데이터를 받아 My_Study에서 보여주고 관리하는 방법을 포스팅한다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting4;\r\n","export default __webpack_public_path__ + \"static/media/study3_1.5a301ce7.PNG\";","export default __webpack_public_path__ + \"static/media/study5_2.29d180c9.PNG\";","export default __webpack_public_path__ + \"static/media/study3_2.57b88019.PNG\";","import React,{Component} from 'react'\r\nimport Img1 from './img/study3_1.PNG'\r\nimport Img2 from './img/study5_2.PNG'\r\nimport Img3 from './img/study3_2.PNG'\r\n\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 만들기3</h1>\r\n      <h3>My_Study 페이지 만들기</h3>\r\n      <h4>\r\n      이번에는 저번 시간에 이어서 My_Study페이지를 생성해본다. 이전에 props로 My_Study에 state를 전달했었다.<br/><br/>\r\n      이 데이터를 활용해보기 위해 게시판처럼 만들었고 return 하는 코드는 다음과 같다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      <div className=\"code\">&lt;Parent data=&#123;this.state&#125;/&gt;</div>\r\n      만약 부모 컴포넌트에서 위와 같이 값을 전달했을 경우<br/><br/>\r\n      <div className=\"code\">this.props.data</div>\r\n      이런 식으로 데이터 사용이 가능하다.<br/><br/>\r\n      이렇게 전달 받은 state와 map함수를 통해서 title배열을 돌면서 전달 받은 값을 보여준다.<br/><br/>\r\n      key값은 제목을 this.state.state.text[index]로 내용을 보여준다. style은 display:\"none\"을 하여 보기 버튼을 누를때만 보이게 설정을 해둔다.<br/><br/>\r\n      보기와 제거 함수는 아래와 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      보기 함수의 경우 클릭마다 내용을 보여주고 가려주고를 하게 한다. 이는 id를 index나 key을 주어 그에 해당하는 div나 button이 반응하게 했다.<br/><br/>\r\n      remove함수의 경우 App.js에서 상태를 갖고있기 때문에 이벤트를 가져와서 사용한다. 코드는 다음과 같다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      여기서는 데이터를 지울때 slice와 concat함수를 사용해 봤다.<br/><br/>\r\n      slice함수는 매개변수 2개를 사용하는데, 첫번째 인덱스에서 두번째 인덱스까지의 데이터를 가져오는 것이다.<br/><br/>\r\n      예를 들어 slice(0,10)일경우 배열 인덱스 0에서 9까지의 값을 가져온다.<br/><br/>\r\n      concat함수의 경우 뒤에 값을 붙혀주는 함수이다.<br/><br/>\r\n      이 두가지를 합쳐 slice(0,index)와 slice(index+1,array.length)를 concat으로 합쳐주면 index의 위치에 있는 값이 지워지게 되는것이다.<br/><br/>\r\n      indexOf 함수는 그 배열에 같은 값을 가진 위치의 인덱스를 반환한다.<br/><br/>\r\n      이렇게 My_Study페이지를 구현하였고, 이후에 추가적인 내용은 컴포넌트를 생성하여 import하는 식으로 진행할 계획이다.<br/><br/>\r\n      다음 포스팅은 Posting페이지를 만드는 과정을 설명해 본다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Posting6;\r\n","export default __webpack_public_path__ + \"static/media/study4_1.4799c8f9.PNG\";","export default __webpack_public_path__ + \"static/media/study4_2.779b6701.PNG\";","export default __webpack_public_path__ + \"static/media/study5_1.bcab9393.PNG\";","import React,{Component} from 'react'\r\nimport Img1 from './img/study4_1.PNG'\r\nimport Img2 from './img/study4_2.PNG'\r\nimport Img3 from './img/study5_1.PNG'\r\n\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 만들기3</h1>\r\n      <h3>Posting 페이지 만들기</h3>\r\n      <h4>\r\n      이번에는 Posting페이지를 만들어본다. posting 페이지는 이전에 홈페이지와 My_Study페이지를 만들때 사용했던 코드들을 활용하여 쉽게 만들었다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이렇게 각 항목에 대한 버튼들을 생성하고 버튼을 누르면 컴포넌트를 보여준다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      알고리즘 항목은 다음과같은 파일 구조를 갖고있다. index.jsx에서 컴포넌트를 export하고 그 값을 받아서 posting페이지에서 보여준다.<br/><br/>\r\n      알고리즘 폴더의 index.jsx는 다음과 같은 코드를 가지고 있다.<br/><br/>\r\n      이렇게 다시한번 컴포넌트들을 항목으로 만들어 보기/닫기 버튼을 이용해 포스팅한 것들을 보여준다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      posting페이지는 이렇게 새로운 내용없이 기존에 공부했던 내용으로 만들 수 있었다.<br/><br/>\r\n      다음 포스팅때는 메뉴가 여러개로 늘어났을 경우, 코드 관리를 위한 모듈화를 포스팅할 것이다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Posting6;\r\n","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport List1 from './Posting1'\r\nimport List2 from './Posting2'\r\nimport List3 from './Posting3'\r\nimport List4 from './Posting4'\r\nimport List5 from './Posting5'\r\nimport List6 from './Posting6'\r\n\r\nclass App extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n    render(){\r\n      return(\r\n        <div>\r\n            <li className=\"list\">리액트 시작<button className=\"button_box\" id=\"React_button1\" onClick = {()=>{this.change(\"React_study1\",\"React_button1\")}}>보기</button></li>\r\n            <div id=\"React_study1\" className=\"post_list\"><List1/></div>\r\n\r\n            <li className=\"list\">리액트의 기본<button className=\"button_box\" id=\"React_button2\" onClick = {()=>{this.change(\"React_study2\",\"React_button2\")}}>보기</button></li>\r\n            <div id=\"React_study2\" className=\"post_list\"><List2/></div>\r\n\r\n            <li className=\"list\">블로그 만들기 1<button className=\"button_box\" id=\"React_button3\" onClick = {()=>{this.change(\"React_study3\",\"React_button3\")}}>보기</button></li>\r\n            <div id=\"React_study3\" className=\"post_list\"><List3/></div>\r\n\r\n            <li className=\"list\">블로그 만들기 2<button className=\"button_box\" id=\"React_button4\" onClick = {()=>{this.change(\"React_study4\",\"React_button4\")}}>보기</button></li>\r\n            <div id=\"React_study4\" className=\"post_list\"><List4/></div>\r\n\r\n            <li className=\"list\">블로그 만들기 3<button className=\"button_box\" id=\"React_button5\" onClick = {()=>{this.change(\"React_study5\",\"React_button5\")}}>보기</button></li>\r\n            <div id=\"React_study5\" className=\"post_list\"><List5/></div>\r\n\r\n            <li className=\"list\">블로그 만들기 4<button className=\"button_box\" id=\"React_button6\" onClick = {()=>{this.change(\"React_study6\",\"React_button6\")}}>보기</button></li>\r\n            <div id=\"React_study6\" className=\"post_list\"><List6/></div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/4344.dadf33d5.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img from './img/4344.PNG'\r\n\r\nclass Posting1 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>평균은 넘겠지<h3>(정답률 : 37.470%)</h3></h1>\r\n      <h4>\r\n      백준 4344번 문제로 평균을 넘는 학생의 수를 구하는 것이다.<br/><br/>\r\n      이 문제는 배열로 간단히 풀 수 있지만 C++에서 사용하는 vector기능을 이용하여 풀어 보았다.<br/><br/>\r\n      코드는 다음과 같다.\r\n      <br/><br/>\r\n      <img src={Img} className='code'/>\r\n      <br/><br/>\r\n      vector는\r\n      <div className=\"code\">#include &lt;vector&gt;</div>\r\n      <br/><br/>\r\n      이렇게 불러와야 사용할 수 있고\r\n      <div className=\"code\">\r\n      std::vector&lt;vector&gt; v(number);\r\n      </div>\r\n      <br/><br/>\r\n      이렇게 선언했을 때, v는 변수명, number은 백터의 사이즈 int는 자료형에 해당한다.<br/><br/>\r\n      가장 많이 쓰이는 함수 위주로 정리를 하자면<br/><br/>\r\n      <div className=\"code\">\r\n      v.front();<br/><br/>\r\n      v.back();<br/><br/>\r\n      v.push_back(number);<br/><br/>\r\n      v.pop_back();<br/><br/>\r\n      v.begin();<br/><br/>\r\n      v.end();<br/><br/>\r\n      v.size();<br/><br/>\r\n      </div><br/><br/>\r\n      위주로 사용하고, 각각 벡터의 맨처음, 마지막 잠초, 마지막 원소뒤에 number삽입, 마지막 원소 제거,\r\n      벡터 처음과 마지막 가르키기(iterater), 벡터의 사이즈반환이다.<br/><br/>\r\n      <div className=\"code\">std::accumulate(start,end,0);</div><br/><br/>\r\n      의 경우에는 벡터의 평균을 구할 때, 총합을 구하기 위해서 사용하는 코드로\r\n      <div className=\"code\">#include&lt;numeric&gt;</div><br/><br/>\r\n      에서 불러와 사용하며, 백터의 시작, 끝, 자료형으로 생각하여 사용하면 된다.\r\n      이상 벡터에 대해 알아보았다.<br/><br/>이 문제의 경우 알고리즘적으로 어려운 것은 없으니 풀이는 생략한다.\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting1;\r\n","export default __webpack_public_path__ + \"static/media/11650.56ccb84e.PNG\";","export default __webpack_public_path__ + \"static/media/11650_1.60c2219c.PNG\";","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport Img1 from './img/11650.PNG'\r\nimport Img2 from './img/11650_1.PNG'\r\nclass Posting2 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>좌표 정렬하기<h3>(정답률 : 48.847%)</h3></h1>\r\n      <h4>백준 11650번 문제로 주어진 좌표를 정렬하는 문제이다. 이 문제는 여러 방법으로 풀 수 있지만<br/><br/>\r\n      c++언어에서 제공해주는 vector와 pair기능 그리고 sort기능을 이용하면 아주 간단하게 풀 수 있다.<br/><br/>\r\n      코드는 다음과 같다.<br/><br/>\r\n      <img src={Img1}className=\"code\"/><br/><br/>\r\n      여기서 vector는 저번 포스팅에서 이미한 상태로 no.4344를 참고하면 된다. 이번 포스팅은 pair를 위주로 포스팅을 한다.<br/><br/>\r\n      pair는 header 파일이 utility이며 서로다른 자료형을 묶어두는 구조체이다.<br/><br/>\r\n      <div className=\"code\">#include&lt;utility&gt;</div><br/><br/> 이렇게 호출하여 사용하며 선언은 아래와 같다.\r\n      <div className=\"code\">std::pair&lt;&lt;Class T&gt;,&lt;Class T&gt;&gt; name;</div>\r\n      pair의 경우는 좀 특이하게 std::make_pair()라는 함수를 사용하여 값을 넣어주는데, 사용법은 아래와 같다.\r\n      <div className=\"code\">name=std::make_pair(v1,v2);</div><br/><br/>\r\n      위의 알고리즘 문제에서는 벡터의 자료형을 pair 자체로 두어 좌표를 벡터의 하나의 저장공간에 넣는 것이다.<br/><br/>\r\n      여기서 벡터는 sort함수를 통해서 문제에서 원하는대로 정렬이 가능하다.<br/><br/> 이때 난 저번 포스팅에서는 알지 못했던 sort의 기능을 하나 알았다.<br/><br/>\r\n      그건 정렬하는 방법을 사용자가 직접 정해주는 방법이었는데, 함수를 새로 정의해서 sort의 세번째 parameter에 넣어주면 그 함수의 반환값에 <br/><br/>따라서 자동으로 정렬되는 기능이다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      이렇게 비교해주는 함수를 사용후에 다음과 같이 코드를 작성하면,\r\n      <div className=\"code\">std::sort(v.begin(),v.end(),cmp);</div>\r\n      문제에서 원하는 값이 나오게 된다. 이상 포스팅 끝.\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting2\r\n","export default __webpack_public_path__ + \"static/media/1018_1.072f5ce7.PNG\";","export default __webpack_public_path__ + \"static/media/1018_2.0dd60a17.PNG\";","import React,{Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1018_1.PNG'\r\nimport Img2 from './img/1018_2.PNG'\r\nclass Posting3 extends Component{\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n        <h1>체스판 다시 칠하기<h3>(정답률 : 46.526%)</h3></h1>\r\n        <h4>\r\n        이번 문제는 단순 알고리즘 문제이다. 입력받은 체스판에서 8*8모양으로 추출한 후 체스판의 규격에 맞게<br/><br/>\r\n        색칠을 다시 해주고, 이렇게 색칠된 횟수를 계산하여 가장 적게 색칠할 수 있는 횟수를 찾는게 풀이이다.<br/><br/>\r\n        처음 문제를 보고, python을 활용하여 문제를 풀면 쉽게 풀릴 것으로 생각이 되었다.<br/><br/>\r\n        하지만 C++을 이용하여 문제를 풀어보았다.<br/><br/>\r\n        가장 먼저 떠오른 아이디어는 이미지처리에서 사용하는 필터의 개념이었다. 입력받은 값을 이미지의 값으로<br/><br/>\r\n        생각을 하고 필터가 돌면서 색칠해야하는 경우(처음이 검은색, 처음이 흰색)중 작은 값을 선택하고, 이전의<br/><br/>\r\n        최소값과 비교해 값을 가져가는 방식으로 해보았다.<br/><br/>\r\n        먼저 흰색, 검은색 보드를 선언해 주었다.<br/><br/>\r\n        <img src={Img1} className=\"code\"/><br/><br/>\r\n        이렇게 필터(보드)를 만들어 주고 각 이미지를 돌면서 비교를 한다.<br/><br/>\r\n        아래는 핵심 알고리즘이다.<br/><br/>\r\n        <img src={Img2} className=\"code\"/><br/><br/>\r\n        두가지 필터를 돌면서 최소값을 찾아주고, 이전의 최소값과 비교하여 최종값을 반환한다.<br/><br/>\r\n        문제 차제는 난이도가 어렵지않지많, 시간을 줄이기를 신경쓴다면 어렵게 풀수 있을것 같다.<br/><br/>\r\n        또 문제를 처음에 잘못읽어 어렵게 풀었는데, 다음부터는 문제를 잘 읽어야겠다. 이상 포스팅 끝<br/><br/>\r\n\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting3\r\n","export default __webpack_public_path__ + \"static/media/1010.19fd6053.PNG\";","import React,{Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1010.PNG'\r\n\r\nclass Posting4 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>다리 놓기<h3>(정답률 : 48.517%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 다리놓기 문제로 양쪽에 목적지를 갖고, 다리가 겹치지 않게 놓을 때의 경우의 수를 구하는 문제이다.<br/><br/>\r\n      문제를 읽었을 때는 어려워 보이지만 조금만 생각해보면 순열공식을 이용한다면 금방 풀 수 있는 문제이다.<br/><br/>\r\n      문제 조건이 0 &lt; N &lt;=M &lt; 30 이므로 조합공식인 mPn을 이용한다.<br/><br/>\r\n      이를 간단하게 풀면 M!/(M-N)!N! 로 볼 수 있다.<br/><br/>\r\n      아래는 알고리즘이다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      단순히 M!, (M-N)!, N!를 각각 따로 계산하면 오버플로가 발생하기 때문에 반복문을 돌 때 값을 나누는 작업을 동시에 해줘야한다.<br/><br/>\r\n      반복문을 돌면서 1부터 M을 곱하는 동시에 1부터 N과 1부터 M-N을 나눠 주는 작업을 반복문 한번을 돌면서 실행한다.<br/><br/>\r\n      문제가 요구하는게 빠른 계산이기 때문에 재귀함수와 같이 시간이 오래 걸리는 알고리즘은 가급적 피해주었다. 이상 포스팅 끝 <br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting4;\r\n","export default __webpack_public_path__ + \"static/media/1051.bca3ab04.PNG\";","import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1051.PNG'\r\n\r\nclass Posting5 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>숫자 정사각형<h3>(정답률 : 37.492%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 주어진 직사각형(N*M)안에 입력받은 정수가 모든 칸을 차지하고 있다.<br/><br/>\r\n      이 직사각형 안에서는 정사각형이 존재하는데, 이 정사각형의 꼭짓점에 숫자 4개가 모두 같은 정사각형 중에 가장 큰 정사각형의 크기를 구하면된다.<br/><br/>\r\n      예를 들어 다음과 같이 입력이 되었을 때, 9라는 값이 출력되어야 한다.<br/><br/>\r\n      <div className='code'>3 5<br/>42101<br/>22100<br/>22101</div>\r\n      이때 생각한 알고리즘은 이미지프로세싱에서 사용하는 필터의 개념을 생각 하였다.<br/><br/>\r\n      핵심 알고리즘의 코드는 다음과 같다.\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      N과 M 중 작은 숫자를 정사각형의 최대 크기로 잡고, 직사각형안을 순회한다.<br/><br/>\r\n      순회 후 조건에 맞는 정사각형이 없을 경우 변의 길이를 1씩 감소시키면서 처음부터 반복한다.<br/><br/>\r\n      이렇게 찾게되면 변의 길이를 제곱하여 반환을 하면, 원하는 값이 나온다.<br/><br/>\r\n      이번 문제는 어렵지는 않지만, 정사각형이 직사각형 안을 돌아 다닐때, 인덱스를 주의해야한다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting5;\r\n","export default __webpack_public_path__ + \"static/media/1037.255c6160.PNG\";","import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1037.PNG'\r\n\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>약수<h3>(정답률 : 49.574%)</h3></h1>\r\n      <h4>이번 문제는 양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다.<br/><br/>\r\n      어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.라는 문제이다. 생각해보면 매우 간단한 문제이다.<br/><br/>\r\n      약수의 개수가 짝수개 나오면 중간의 2개를 곱한 값이 N이 될것이고, 홀수일 경우 중간의 값을 제곱하면 N이 될것이다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      코드는 위와 같다.<br/><br/>\r\n      이 문제는 조금만 생각하면 금방 풀 수 있는 문제 코드만 봐도 금방 이해할 수 있다.<br/><br/>\r\n      이상 포스팅 끝\r\n\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting6;\r\n","import List1 from './Posting1'\r\nimport List2 from './Posting2'\r\nimport List3 from './Posting3'\r\nimport List4 from './Posting4'\r\nimport List5 from './Posting5'\r\nimport List6 from './Posting6'\r\n\r\n\r\nexport const List = [\r\n  {title : '백준 no.4344', content : <List1/>},\r\n  {title : '백준 no.11650', content : <List2/>},\r\n  {title : '백준 no.1018', content : <List3/>},\r\n  {title : '백준 no.1010', content : <List4/>},\r\n  {title : '백준 no.1051', content : <List5/>},\r\n  {title : '백준 no.1037', content : <List6/>},\r\n];\r\n","import React, {Component} from 'react';\r\nimport '../App.css'\r\nimport { List } from './listOfContents';\r\n\r\nclass App extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n    render(){\r\n      return(\r\n        <div>\r\n            {List.map((i,idx)=>{return(\r\n              <div>\r\n                <li className=\"list\">\r\n                  {i.title}\r\n                  <button className=\"button_box\" id={i.title} onClick = {()=>{this.change(idx, i.title)}}>\r\n                    보기\r\n                  </button>\r\n                </li>\r\n                <div id={idx} className=\"post_list\">{i.content}</div>\r\n              </div>\r\n            )})}\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport React_study from './React_study'\r\nimport Algorithm from './algorithm/index'\r\nclass Posting extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n    }\r\n  }\r\n  render(){\r\n      return (\r\n        <div className=\"Posting\">\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study3\",\"test\")}}>알고리즘 공부</button>\r\n          <div id=\"study3\" className=\"post_menu\"><Algorithm/></div>\r\n\r\n          <button className=\"post_body\" id=\"react_button\" onClick = {()=>{this.change(\"study1\",\"react_button\")}}>리액트 공부</button>\r\n          <div id=\"study1\" className=\"post_menu\"><React_study/></div>\r\n\r\n          <button className=\"post_body\" id=\"django_button\" onClick = {()=>{this.change(\"study2\",\"django_button\")}}>장고 공부</button>\r\n          <div id=\"study2\" className=\"post_menu\">nothing</div>\r\n\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study4\",\"test\")}}>ML 공부</button>\r\n          <div id=\"study4\" className=\"post_menu\">nothing</div>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass Link extends Component{\r\n  render(){\r\n      return (\r\n        <div className=\"Link\">\r\n          <p className=\"body\">\r\n            <div>저의 깃허브 페이지와 여러 sns 사이트 링크입니다.</div><br/>\r\n            <a href=\"https://github.com/jae-yong-2\"><button className=\"button_link\">GIT_HUB</button></a><br/>\r\n            <a href=\"facebook.com/ljy8972\"><button className=\"button_link\">FACEBOOK</button></a><br/>\r\n            <a href=\"https://www.instagram.com/jae_yong_lee_/\"><button className=\"button_link\">INSTAGRAM</button></a>\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass Home_Page extends Component{\r\n  add_post=(title,text)=>{\r\n    if(this.props.state.title.indexOf(title)>=0){\r\n      alert(\"중복된 제목이 있습니다.\")\r\n    }else {\r\n      this.props.add_post(title,text)\r\n    }\r\n  }\r\n  render(){\r\n\r\n      return (\r\n        <div className=\"Home_Page\">\r\n          <p className=\"body\">\r\n            <br/>공부합시다....\r\n            <br/>이 블로그는 리액트와 깃허브를 공부하기 위해 만들었고 리액트만으로 만들어졌습니다.\r\n            <br/>페이지 이동없이 블로그를 구현할 계획입니다.\r\n            <br/>동시에 어떤 공부를 했는지 모여주는 블로그입니다.\r\n            <br/>공부했던 내용은 posting항목에서 확인 가능합니다.\r\n            <br/>아래는 리액트 공부내용을 시각적으로 보여주며 My_Study와 함께 웹공부를 할 것 입니다.\r\n            <br/>Link를 가시면 저의 기본 정보를 보실 수 있습니다.\r\n            <br/>\r\n            <input className='title_box' id='제목' placeholder=\"제목\"/><br/>\r\n            <div className='content_box' contentEditable=\"true\" id='content' placeholder=\"content\"></div>\r\n              <button className='button_box' onClick={()=>{{\r\n                this.add_post(document.getElementById('제목').value, document.getElementById('content').innerHTML);\r\n              }}}>등록</button>\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home_Page;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport My_Study from './My_Study';\r\nimport Posting from './Posting';\r\nimport Link from './Link';\r\nimport Home_Page from './Home_Page';\r\n\r\nclass App extends Component{\r\n  state={\r\n    site: 'Home_Page',\r\n    gotoSite: ['Home_Page','Posting','My_Study','Link'],\r\n    title:[\"App.js데이터입니다.\"],\r\n    text:[\"props를 이용하여 값을 보냅니다.\"],\r\n    img:[],\r\n  };\r\n  add_post = (title,text)=>{                      //상태를 변경함 백엔드 연동시 거기에 정보를 넣어야함\r\n    this.setState(\r\n      {\r\n        title: this.state.title.concat(title),\r\n        text: this.state.text.concat(text)\r\n      }\r\n    );\r\n  }\r\n  remove_post=(key)=>{                        //등록정보를 지울수있음\r\n    var index=this.state.title.indexOf(key)\r\n    this.setState({\r\n      title:this.state.title.slice(0,index).concat(this.state.title.slice(index+1, this.state.title.length)),\r\n      text:this.state.text.slice(0,index).concat(this.state.text.slice(index+1, this.state.text.length)),\r\n    });\r\n  }\r\n  Home_Page = (text) =>{\r\n    this.setState({\r\n      site: text\r\n    });\r\n  }\r\n  menu=this.state.gotoSite.map((site,key)=>{return <a className=\"button_css col-md-3\" onClick={()=>{this.Home_Page(site)}}>{site}</a>})\r\n\r\n  render(){\r\n    const htmlTitle = document.querySelector(\"title\"); // <title> 태그 찾기\r\n    htmlTitle.innerText = this.state.site;\r\n    \r\n    if(this.state.site=='Home_Page'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Home_Page add_post={this.add_post} state={this.state}/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Posting'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Posting/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='My_Study'){\r\n      return (\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <My_Study remove_post={this.remove_post} state={this.state}/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Link'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Link/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}