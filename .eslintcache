[{"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\index.js":"1","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Home_Page.js":"2","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\App.js":"3","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\MY_STUDY.js":"4","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\LINK.js":"5","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Link.js":"6","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\My_Study.js":"7","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Posting.js":"8","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\react_study\\index.js":"9","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\index.js":"10","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\listOfContents.js":"11","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\index.jsx":"12","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting2.jsx":"13","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting1.jsx":"14","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting1.jsx":"15","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting5.jsx":"16","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting6.jsx":"17","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting5.jsx":"18","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting7.jsx":"19","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting8.jsx":"20","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting9.jsx":"21","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting10.jsx":"22","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting11.jsx":"23","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting6.jsx":"24","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting12.jsx":"25","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting2.jsx":"26","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting3.jsx":"27","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting3.jsx":"28","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting4.jsx":"29","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting7.jsx":"30"},{"size":150,"mtime":1611304067765,"results":"31","hashOfConfig":"32"},{"size":1580,"mtime":1613456116289,"results":"33","hashOfConfig":"32"},{"size":2499,"mtime":1613451462159,"results":"34","hashOfConfig":"32"},{"size":559,"mtime":1611403198707,"results":"35","hashOfConfig":"32"},{"size":543,"mtime":1611403105282,"results":"36","hashOfConfig":"32"},{"size":729,"mtime":1612687700904,"results":"37","hashOfConfig":"32"},{"size":1327,"mtime":1613455619765,"results":"38","hashOfConfig":"32"},{"size":1374,"mtime":1612859328267,"results":"39","hashOfConfig":"32"},{"size":195,"mtime":1611838566165,"results":"40","hashOfConfig":"32"},{"size":1364,"mtime":1614151688154,"results":"41","hashOfConfig":"32"},{"size":1374,"mtime":1614142239444,"results":"42","hashOfConfig":"32"},{"size":1038,"mtime":1614151351833,"results":"43","hashOfConfig":"32"},{"size":2392,"mtime":1612257019150,"results":"44","hashOfConfig":"32"},{"size":1708,"mtime":1613451098677,"results":"45","hashOfConfig":"32"},{"size":2154,"mtime":1613451406351,"results":"46","hashOfConfig":"32"},{"size":1661,"mtime":1613451409145,"results":"47","hashOfConfig":"32"},{"size":1652,"mtime":1613456520510,"results":"48","hashOfConfig":"32"},{"size":2921,"mtime":1613455185747,"results":"49","hashOfConfig":"32"},{"size":1644,"mtime":1614064313148,"results":"50","hashOfConfig":"32"},{"size":2870,"mtime":1614067704076,"results":"51","hashOfConfig":"32"},{"size":1815,"mtime":1614069467835,"results":"52","hashOfConfig":"32"},{"size":1870,"mtime":1614144194423,"results":"53","hashOfConfig":"32"},{"size":2497,"mtime":1614144188790,"results":"54","hashOfConfig":"32"},{"size":1070,"mtime":1613451255250,"results":"55","hashOfConfig":"32"},{"size":2986,"mtime":1614147858179,"results":"56","hashOfConfig":"32"},{"size":1539,"mtime":1613451113715,"results":"57","hashOfConfig":"32"},{"size":2954,"mtime":1613451123799,"results":"58","hashOfConfig":"32"},{"size":2108,"mtime":1613451231086,"results":"59","hashOfConfig":"32"},{"size":1485,"mtime":1613451408511,"results":"60","hashOfConfig":"32"},{"size":3004,"mtime":1614153793000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"151ouc9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\index.js",[],["137","138"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Home_Page.js",["139"],"import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\n\r\nclass Home_Page extends Component{\r\n  add_post=(title,text)=>{\r\n    if(this.props.state.title.indexOf(title)>=0){\r\n      alert(\"중복된 제목이 있습니다.\")\r\n    }else {\r\n      this.props.add_post(title,text)\r\n    }\r\n  }\r\n  render(){\r\n\r\n      return (\r\n        <div className=\"Home_Page\">\r\n          <p className=\"body\">\r\n            <br/>공부합시다....\r\n            <br/>이 블로그는 리액트와 깃허브를 공부하기 위해 만들었고 리액트만으로 만들어졌습니다.\r\n            <br/>페이지 이동없이 블로그를 구현할 계획입니다.\r\n            <br/>동시에 어떤 공부를 했는지 모여주는 블로그입니다.\r\n            <br/>공부했던 내용은 posting항목에서 확인 가능합니다.\r\n            <br/>아래는 리액트 공부내용을 시각적으로 보여주며 My_Study와 함께 웹공부를 할 것 입니다.\r\n            <br/>Link를 가시면 저의 기본 정보를 보실 수 있습니다.\r\n            <br/>\r\n            <input className='title_box' id='제목' placeholder=\"제목\"/><br/>\r\n            <div className='content_box' contentEditable=\"true\" id='content' placeholder=\"content\"></div>\r\n              <button className='button_box' onClick={()=>{{\r\n                this.add_post(document.getElementById('제목').value, document.getElementById('content').innerHTML);\r\n              }}}>등록</button>\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home_Page;\r\n",["140","141"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\App.js",["142","143","144","145","146","147","148"],"import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport My_Study from './My_Study';\r\nimport Posting from './Posting';\r\nimport Link from './Link';\r\nimport Home_Page from './Home_Page';\r\n\r\nclass App extends Component{\r\n  state={\r\n    site: 'Home_Page',\r\n    gotoSite: ['Home_Page','Posting','My_Study','Link'],\r\n    title:[\"App.js데이터입니다.\"],\r\n    text:[\"props를 이용하여 값을 보냅니다.\"],\r\n    img:[],\r\n  };\r\n  add_post = (title,text)=>{                      //상태를 변경함 백엔드 연동시 거기에 정보를 넣어야함\r\n    this.setState(\r\n      {\r\n        title: this.state.title.concat(title),\r\n        text: this.state.text.concat(text)\r\n      }\r\n    );\r\n  }\r\n  remove_post=(key)=>{                        //등록정보를 지울수있음\r\n    var index=this.state.title.indexOf(key)\r\n    this.setState({\r\n      title:this.state.title.slice(0,index).concat(this.state.title.slice(index+1, this.state.title.length)),\r\n      text:this.state.text.slice(0,index).concat(this.state.text.slice(index+1, this.state.text.length)),\r\n    });\r\n  }\r\n  Home_Page = (text) =>{\r\n    this.setState({\r\n      site: text\r\n    });\r\n  }\r\n  menu=this.state.gotoSite.map((site,key)=>{return <a className=\"button_css col-md-3\" onClick={()=>{this.Home_Page(site)}}>{site}</a>})\r\n\r\n  render(){\r\n    const htmlTitle = document.querySelector(\"title\"); // <title> 태그 찾기\r\n    htmlTitle.innerText = this.state.site;\r\n    \r\n    if(this.state.site=='Home_Page'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Home_Page add_post={this.add_post} state={this.state}/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Posting'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Posting/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='My_Study'){\r\n      return (\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <My_Study remove_post={this.remove_post} state={this.state}/>\r\n        </div>\r\n      );\r\n    }\r\n    if(this.state.site=='Link'){\r\n      return(\r\n        <div className=\"App\">\r\n          <nav className=\"main_header\">\r\n          {this.menu}\r\n          </nav>\r\n          <Link/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n",["149","150"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\MY_STUDY.js",["151"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\LINK.js",["152"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Link.js",[],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\My_Study.js",["153"],"import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nclass My_Study extends Component{\r\n  remove_post=(title)=>{\r\n    this.props.remove_post(title.key)\r\n  }\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n      document.getElementById(bid).innerText=\"보기\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n      document.getElementById(bid).innerText=\"닫기\";\r\n    }\r\n  }\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"My_Study\">\r\n          <p className=\"body\">\r\n          <div>웹페이지를 공부하는 메뉴입니다. 게시판을 만들 계획입니다.</div>\r\n          {this.props.state.title.map((key,index)=>{return (\r\n            <div className=\"list\">{key}\r\n              <button className=\"button_box\" id={key} onClick = {()=>{this.change(index,key)}}>보기</button>\r\n              <button className=\"button_box\" onClick={()=>{this.remove_post({key})}}>제거</button>\r\n              <div id={index} style={{display:\"none\"}}dangerouslySetInnerHTML={ {__html: this.props.state.text[index]} }>\r\n              </div>\r\n            </div>\r\n          )})}\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default My_Study;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\Posting.js",["154","155"],"import React, {Component} from 'react';\r\nimport './App.css'\r\nimport './bootstrap/css/bootstrap.css'\r\nimport React_study from './React_study'\r\nimport Algorithm from './algorithm/index'\r\nclass Posting extends Component{\r\n  change=(id,bid)=>{\r\n    if(document.getElementById(id).style.display ==\"block\"){\r\n      document.getElementById(id).style.display =\"none\";\r\n    }\r\n    else{\r\n      document.getElementById(id).style.display =\"block\";\r\n    }\r\n  }\r\n  render(){\r\n      return (\r\n        <div className=\"Posting\">\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study3\",\"test\")}}>알고리즘 공부</button>\r\n          <div id=\"study3\" className=\"post_menu\"><Algorithm/></div>\r\n\r\n          <button className=\"post_body\" id=\"react_button\" onClick = {()=>{this.change(\"study1\",\"react_button\")}}>리액트 공부</button>\r\n          <div id=\"study1\" className=\"post_menu\"><React_study/></div>\r\n\r\n          <button className=\"post_body\" id=\"django_button\" onClick = {()=>{this.change(\"study2\",\"django_button\")}}>장고 공부</button>\r\n          <div id=\"study2\" className=\"post_menu\">nothing</div>\r\n\r\n          <button className=\"post_body\" id=\"test\" onClick = {()=>{this.change(\"study4\",\"test\")}}>ML 공부</button>\r\n          <div id=\"study4\" className=\"post_menu\">nothing</div>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\react_study\\index.js",[],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\index.js",["156","157","158","159","160","161","162"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\listOfContents.js",[],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\index.jsx",["163"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting2.jsx",["164","165"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting1.jsx",["166","167","168","169","170","171"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting1.jsx",["172"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting5.jsx",["173"],"import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1051.PNG'\r\n\r\nclass Posting5 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>숫자 정사각형<h3>(정답률 : 37.492%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 주어진 직사각형(N*M)안에 입력받은 정수가 모든 칸을 차지하고 있다.<br/><br/>\r\n      이 직사각형 안에서는 정사각형이 존재하는데, 이 정사각형의 꼭짓점에 숫자 4개가 모두 같은 정사각형 중에 가장 큰 정사각형의 크기를 구하면된다.<br/><br/>\r\n      예를 들어 다음과 같이 입력이 되었을 때, 9라는 값이 출력되어야 한다.<br/><br/>\r\n      <div className='code'>3 5<br/>42101<br/>22100<br/>22101</div>\r\n      이때 생각한 알고리즘은 이미지프로세싱에서 사용하는 필터의 개념을 생각 하였다.<br/><br/>\r\n      핵심 알고리즘의 코드는 다음과 같다.\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      N과 M 중 작은 숫자를 정사각형의 최대 크기로 잡고, 직사각형안을 순회한다.<br/><br/>\r\n      순회 후 조건에 맞는 정사각형이 없을 경우 변의 길이를 1씩 감소시키면서 처음부터 반복한다.<br/><br/>\r\n      이렇게 찾게되면 변의 길이를 제곱하여 반환을 하면, 원하는 값이 나온다.<br/><br/>\r\n      이번 문제는 어렵지는 않지만, 정사각형이 직사각형 안을 돌아 다닐때, 인덱스를 주의해야한다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting5;\r\n",["174","175"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting6.jsx",["176","177","178"],"import React,{Component} from 'react'\r\nimport Img1 from './img/study4_1.PNG'\r\nimport Img2 from './img/study4_2.PNG'\r\nimport Img3 from './img/study5_1.PNG'\r\n\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 만들기3</h1>\r\n      <h3>Posting 페이지 만들기</h3>\r\n      <h4>\r\n      이번에는 Posting페이지를 만들어본다. posting 페이지는 이전에 홈페이지와 My_Study페이지를 만들때 사용했던 코드들을 활용하여 쉽게 만들었다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이렇게 각 항목에 대한 버튼들을 생성하고 버튼을 누르면 컴포넌트를 보여준다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      알고리즘 항목은 다음과같은 파일 구조를 갖고있다. index.jsx에서 컴포넌트를 export하고 그 값을 받아서 posting페이지에서 보여준다.<br/><br/>\r\n      알고리즘 폴더의 index.jsx는 다음과 같은 코드를 가지고 있다.<br/><br/>\r\n      이렇게 다시한번 컴포넌트들을 항목으로 만들어 보기/닫기 버튼을 이용해 포스팅한 것들을 보여준다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      posting페이지는 이렇게 새로운 내용없이 기존에 공부했던 내용으로 만들 수 있었다.<br/><br/>\r\n      다음 포스팅때는 메뉴가 여러개로 늘어났을 경우, 코드 관리를 위한 모듈화를 포스팅할 것이다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Posting6;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting5.jsx",["179","180","181"],"import React,{Component} from 'react'\r\nimport Img1 from './img/study3_1.PNG'\r\nimport Img2 from './img/study5_2.PNG'\r\nimport Img3 from './img/study3_2.PNG'\r\n\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>블로그 만들기3</h1>\r\n      <h3>My_Study 페이지 만들기</h3>\r\n      <h4>\r\n      이번에는 저번 시간에 이어서 My_Study페이지를 생성해본다. 이전에 props로 My_Study에 state를 전달했었다.<br/><br/>\r\n      이 데이터를 활용해보기 위해 게시판처럼 만들었고 return 하는 코드는 다음과 같다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      <div className=\"code\">&lt;Parent data=&#123;this.state&#125;/&gt;</div>\r\n      만약 부모 컴포넌트에서 위와 같이 값을 전달했을 경우<br/><br/>\r\n      <div className=\"code\">this.props.data</div>\r\n      이런 식으로 데이터 사용이 가능하다.<br/><br/>\r\n      이렇게 전달 받은 state와 map함수를 통해서 title배열을 돌면서 전달 받은 값을 보여준다.<br/><br/>\r\n      key값은 제목을 this.state.state.text[index]로 내용을 보여준다. style은 display:\"none\"을 하여 보기 버튼을 누를때만 보이게 설정을 해둔다.<br/><br/>\r\n      보기와 제거 함수는 아래와 같다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      보기 함수의 경우 클릭마다 내용을 보여주고 가려주고를 하게 한다. 이는 id를 index나 key을 주어 그에 해당하는 div나 button이 반응하게 했다.<br/><br/>\r\n      remove함수의 경우 App.js에서 상태를 갖고있기 때문에 이벤트를 가져와서 사용한다. 코드는 다음과 같다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      여기서는 데이터를 지울때 slice와 concat함수를 사용해 봤다.<br/><br/>\r\n      slice함수는 매개변수 2개를 사용하는데, 첫번째 인덱스에서 두번째 인덱스까지의 데이터를 가져오는 것이다.<br/><br/>\r\n      예를 들어 slice(0,10)일경우 배열 인덱스 0에서 9까지의 값을 가져온다.<br/><br/>\r\n      concat함수의 경우 뒤에 값을 붙혀주는 함수이다.<br/><br/>\r\n      이 두가지를 합쳐 slice(0,index)와 slice(index+1,array.length)를 concat으로 합쳐주면 index의 위치에 있는 값이 지워지게 되는것이다.<br/><br/>\r\n      indexOf 함수는 그 배열에 같은 값을 가진 위치의 인덱스를 반환한다.<br/><br/>\r\n      이렇게 My_Study페이지를 구현하였고, 이후에 추가적인 내용은 컴포넌트를 생성하여 import하는 식으로 진행할 계획이다.<br/><br/>\r\n      다음 포스팅은 Posting페이지를 만드는 과정을 설명해 본다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Posting6;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting7.jsx",["182"],"import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from \"./img/18258_1.PNG\"\r\nclass Posting6 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>큐 2<h3>(정답률 : 30.82%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 라이브러리 큐를 사용하는 문제이다. 제한 시간이 1초이기 때문에 구현으로 답을 맞추기에는 시간초과가 뜨기 때문이다.<br/><br/>\r\n      문제에서 사용하는 명령어는 \"push\", \"pop\", \"size\", \"empty\", \"empty\", \"front\", \"back\"이렇게 6가지로 구현이 된다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      여기서 문자를 전부 비교해서 하는것은 속도를 느리게 하기때문에 문자열을 입력받으면 특정문자열의 문자를 비교하여 이런 식으로 명령어를 실행한다.<br/><br/>\r\n      이 문제에 사용된 queue의 명령어는 다음과 같다.<br/><br/>\r\n      <div className=\"code\">\r\n      queue.front();<br/><br/>\r\n      queue.back();<br/><br/>\r\n      queue.pop();<br/><br/>\r\n      queue.size();<br/><br/>\r\n      queue.empty();<br/><br/>\r\n      </div>\r\n      front()와 back()은 각각 큐의 맨 앞부분과 맨 뒷부분의 값을 참조하는 함수이고 pop()은 맨 앞의 값을 없애주는 함수이다.<br/><br/>\r\n      size()는 큐의 사이즈를 나타내고 empty()는 큐가 비어있으면 true, 차있으면 false를 반환한다.<br/><br/>\r\n      이를 적절히 활용하여 문제를 풀 수 있다.<br/><br/>\r\n      이상 포스팅 끝<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting6;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting8.jsx",["183","184","185","186"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting9.jsx",["187","188"],"import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/11047.PNG'\r\nimport Img2 from './img/1929.PNG'\r\nclass Posting9 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>동전 0<h3>(정답률 : 53.047%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 N개의 동전의 가치가 오름 차순으로 주어지고, K원이 주어진다.<br/><br/>\r\n      이때 최소 돈전 갯수를 구하는 알고리즘을 구하는 것이다. 코드는 다음과 같다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      알고리즘은 간단하다 vector에 값을 받아두고, 오름차순으로 값을 받기 때문에 뒤에서부터 값을 나눠서 카운트를 해준다.<br/><br/>\r\n      몫이 0으로 나오면 인덱스를 낮추어 카운트를 다시 시작한다.<br/><br/>\r\n      </h4>\r\n      <h1>소수 구하기<h3>(정답률 : 27.295%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 소수를 구하는 문제이다. 이 문제의 경우 모든 반복문을 통과하면서 모두 찾아주는 방식은 시간초과가 뜨도록 되어있다.<br/><br/>\r\n      이를 해결하기 위해서 에라토스테네스의 체를 사용하였다. 개념은 <a href=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4\">여기</a>\r\n      들어가보면 알 수 있다.<br/><br/>\r\n      이에 맞춰서 2의 배수는 전부 체크를 해주고, 다음으로 넘어간다. 3의 배수를 소수로하고 모든 3의 배수를 체크한다.<br/><br/>\r\n      이런 식으로 반복하다보면 범위 내의 소수를 빠른 시간에 구할 수 있다.<br/><br/>\r\n      이상 포스팅 끝.<br/><br/>\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting9;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting10.jsx",["189","190"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting11.jsx",["191","192"],"import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1072.PNG'\r\nimport Img2 from './img/1072_1.PNG'\r\nclass Posting11 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>게임<h3>(정답률 : 21.094%)</h3></h1>\r\n      <h4>\r\n      이 문제는 이분탐색을 하는 문제이다. 문제는 간단한 예시로 50판중에 25판을 이겼다고 가정하자. 이때 승률이 1%가 오를려면 몇판을 최소 이겨야하는지 찾는 문제이다.<br/><br/>\r\n      처음에는 단순히 모든 반복문을 돌면서 계산을 했고 당연하게 시간초과가 나왔다.<br/><br/>\r\n      시간 초과가 계속해서 나와 시간을 줄이기 위해서 이분 탐색을 생각해냈다.<br/><br/>\r\n      <h2>이분 탐색이란?</h2>\r\n      이분 탐색이란 탐색 범위를 두부분으로 나눠서 찾는 방식이다. 이렇게 하면 전부 탐색하는 것보다 훨씬 짧은 시간으로 값을 찾을 수 있다.<br/><br/>\r\n      다음은 이분 탐색을 하는 방법이다.<br/><br/>\r\n      <div className=\"code\">\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      <a href=\"https://velog.io/@ming/%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89Binary-Search\">사진출처</a><br/><br/>\r\n      1. 찾고자 하는 데이터가 정렬되어 있어야한다.<br/><br/>\r\n      2. begin값과 end값을 정의해준다.<br/><br/>\r\n      3. begin과 end의 중간인 mid값을 잡아준다.<br/><br/>\r\n      4. mid값과 구하고자하는 값을 비교한다.<br/><br/>\r\n         &nbsp;&nbsp;&nbsp;(이때 비교하는 값은 조건으로 코드상으로 볼때 정답 값과 비교하는 것이 아닌 조건문으로 조건에 맞게 찾아가는것이다.)<br/><br/>\r\n      5. mid보다 크면 begin = mid + 1을 해준다. 반대로 값이 낮으면 end = mid - 1을 해준다.<br/><br/>\r\n      6. 이렇게 값을 찾을때까지 2~4를 반복해 준다.<br/><br/>\r\n      </div><br/><br/>\r\n      코드는 다음과 같다.<br/><br/>\r\n      mid값을 end값을 수정하는 부분에 둔 이유는 퍼센트값이 넘어가는 지점에서 정답이 나오기 때문에 begin부분의 조건문에서가 아닌 end에서 넣어준다.<br/><br/>\r\n      이렇게 O(n)시간이 걸리는 문제를 O(log n)으로 시간을 단축하여 풀었다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/>\r\n      이상 포스팅 끝\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting11;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting6.jsx",["193"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting12.jsx",["194","195","196","197","198"],"import React, {Component} from 'react'\r\nimport '../App.css'\r\nimport Img1 from './img/1260.png'\r\nimport Img2 from './img/1260_1.png'\r\nimport Img3 from './img/1260_2.png'\r\nimport Img4 from './img/1260_3.png'\r\nimport Img5 from './img/1260_4.png'\r\nclass Posting12 extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"left\">\r\n      <h1>DFS와 BFS<h3>(정답률 : 33.430%)</h3></h1>\r\n      <h4>\r\n      이번 문제는 DFS와 BFS를 구현하는 문제이다.<br/><br/>\r\n      주어진 값에 숫자가 작은 순서로 탐색을 하면되는 조건으로 문제를 풀면된다.<br/><br/>\r\n      코드만 보면 DFS와 BFS는 다음과 같다.<br/><br/>\r\n      <img src={Img1} className=\"code\"/><br/><br/><br/><br/>\r\n      <h3>DFS란?</h3>\r\n      DFS는 Depth First Search의 약자로 해석하면 깊이우선탐색이라고 볼 수 있다.<br/><br/>\r\n      그래프가 주어지면 가장 깊은곳으로 들어가 탐색을 하고, 그다음 깊은곳, 그다음 깊은곳 ... 이렇게 반복하여 찾는것이다.<br/><br/>\r\n      <img src={Img2} className=\"code\"/><br/><br/>\r\n      첫번째 시작 지점을 루트노드로 지정하고 시작노드에서 가장 멀리 떨어진 구간의 노드를 리프노드로하면 트리구조로 쉽게 이해할 수 있다.<br/><br/>\r\n      위 그림과 같이 깊은곳부터 탐색을 하게된다.<br/><br/>\r\n      이렇게 탐색된 그래프는 stack구조를 이용해서 순회를 하게 된다.<br/><br/>\r\n      순회를 하면 stack에 들어가는 순서 자체는 1-5-2-4-3-6로 들어가게된다.<br/><br/>\r\n      하지만 stack을 pop할때 순회로 인정되기때문에 1-2-3-4-5-6순으로 순회하게 되는 것이다.<br/><br/>\r\n      이를 스택구조로 보게 된다면 다음과 같다.<br/><br/>\r\n      <img src={Img3} className=\"code\"/><br/><br/>\r\n      <h3>BFS란?</h3>\r\n      BFS는 Breadth-first search의 약자로 DFS와는 약간의 차이가 있는데, 해석하면 넓이우선탐색이다.<br/><br/>\r\n      <img src={Img4} className=\"code\"/><br/><br/>\r\n      트리 구조로 놓았을 때, 넓이 부분을 순차적으로 탐색하면서 깊이를 내려가는 탐색방법이다.<br/><br/>\r\n      DFS에서 Stack을 사용한다면 BFS에서는 Queue를 사용하는데, 재밌는점은 알고리즘은 완전 같지만 단지 큐를 사용한다는 점이다.<br/><br/>\r\n      큐는 선입선출이기떄문에 큐에 들어가는 순서와 pop의 순서가 1-5-2-4-6-3으로 같다.<br/><br/>\r\n      그림으로 보면 다음과 같다.<br/><br/>\r\n      <img src={Img5} className=\"code\"/><br/><br/>\r\n      DFS와 BFS에서 스택과 큐에 값이 남았음에도 순회로 인정되지 않는 이유는 이미 이전에 방문한적이 있기 때문이다.<br/><br/>\r\n      이점은 코드를 짤때도 유의해서 꼭 visit부분을 체크해줘야한다.<br/><br/>\r\n      이상 포스팅 끝\r\n\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posting12;\r\n","C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting2.jsx",["199","200"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting3.jsx",["201","202","203"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting3.jsx",["204","205"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\algorithm\\Posting4.jsx",["206"],"C:\\Users\\ljy89\\Desktop\\GLOG\\blog\\src\\React_study\\Posting7.jsx",["207","208","209","210","211","212"],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":28,"column":60,"nodeType":"219","messageId":"220","endLine":30,"endColumn":16},{"ruleId":"213","replacedBy":"221"},{"ruleId":"215","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":37,"column":52,"nodeType":"225","endLine":37,"endColumn":124},{"ruleId":"226","severity":1,"message":"227","line":43,"column":23,"nodeType":"228","messageId":"229","endLine":43,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":49,"column":11,"nodeType":"225","endLine":49,"endColumn":67},{"ruleId":"226","severity":1,"message":"227","line":53,"column":23,"nodeType":"228","messageId":"229","endLine":53,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":63,"column":23,"nodeType":"228","messageId":"229","endLine":63,"endColumn":25},{"ruleId":"230","severity":1,"message":"232","line":69,"column":11,"nodeType":"225","endLine":69,"endColumn":72},{"ruleId":"226","severity":1,"message":"227","line":73,"column":23,"nodeType":"228","messageId":"229","endLine":73,"endColumn":25},{"ruleId":"213","replacedBy":"233"},{"ruleId":"215","replacedBy":"234"},{"ruleId":"223","severity":1,"message":"224","line":13,"column":58,"nodeType":"225","endLine":13,"endColumn":131},{"ruleId":"223","severity":1,"message":"224","line":13,"column":58,"nodeType":"225","endLine":13,"endColumn":131},{"ruleId":"226","severity":1,"message":"227","line":9,"column":50,"nodeType":"228","messageId":"229","endLine":9,"endColumn":52},{"ruleId":"226","severity":1,"message":"227","line":8,"column":50,"nodeType":"228","messageId":"229","endLine":8,"endColumn":52},{"ruleId":"230","severity":1,"message":"235","line":22,"column":50,"nodeType":"225","endLine":22,"endColumn":64},{"ruleId":"236","severity":1,"message":"237","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"240","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":13},{"ruleId":"236","severity":1,"message":"241","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":13},{"ruleId":"236","severity":1,"message":"242","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":13},{"ruleId":"236","severity":1,"message":"243","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":13},{"ruleId":"236","severity":1,"message":"244","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":13},{"ruleId":"236","severity":1,"message":"245","line":9,"column":8,"nodeType":"238","messageId":"239","endLine":9,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":7,"column":50,"nodeType":"228","messageId":"229","endLine":7,"endColumn":52},{"ruleId":"246","severity":1,"message":"247","line":13,"column":7,"nodeType":"225","endLine":13,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":23,"column":7,"nodeType":"225","endLine":23,"endColumn":41},{"ruleId":"236","severity":1,"message":"248","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":12},{"ruleId":"246","severity":1,"message":"247","line":19,"column":9,"nodeType":"225","endLine":19,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":23,"column":9,"nodeType":"225","endLine":23,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":27,"column":9,"nodeType":"225","endLine":27,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":29,"column":9,"nodeType":"225","endLine":29,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":30,"column":9,"nodeType":"225","endLine":30,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":15,"column":7,"nodeType":"225","endLine":15,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":17,"column":7,"nodeType":"225","endLine":17,"endColumn":41},{"ruleId":"213","replacedBy":"249"},{"ruleId":"215","replacedBy":"250"},{"ruleId":"246","severity":1,"message":"247","line":14,"column":7,"nodeType":"225","endLine":14,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":16,"column":7,"nodeType":"225","endLine":16,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":20,"column":7,"nodeType":"225","endLine":20,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":15,"column":7,"nodeType":"225","endLine":15,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":23,"column":7,"nodeType":"225","endLine":23,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":26,"column":7,"nodeType":"225","endLine":26,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":12,"column":7,"nodeType":"225","endLine":12,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":18,"column":7,"nodeType":"225","endLine":18,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":28,"column":7,"nodeType":"225","endLine":28,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":30,"column":7,"nodeType":"225","endLine":30,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":32,"column":7,"nodeType":"225","endLine":32,"endColumn":41},{"ruleId":"236","severity":1,"message":"251","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":12},{"ruleId":"246","severity":1,"message":"247","line":13,"column":7,"nodeType":"225","endLine":13,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":14,"column":7,"nodeType":"225","endLine":14,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":22,"column":8,"nodeType":"225","endLine":22,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":18,"column":7,"nodeType":"225","endLine":18,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":31,"column":7,"nodeType":"225","endLine":31,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":13,"column":7,"nodeType":"225","endLine":13,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":17,"column":7,"nodeType":"225","endLine":17,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":21,"column":7,"nodeType":"225","endLine":21,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":28,"column":7,"nodeType":"225","endLine":28,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":31,"column":7,"nodeType":"225","endLine":31,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":36,"column":7,"nodeType":"225","endLine":36,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":11,"column":7,"nodeType":"225","endLine":11,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":13,"column":7,"nodeType":"225","endLine":13,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":17,"column":7,"nodeType":"225","endLine":17,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":24,"column":7,"nodeType":"225","endLine":24,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":32,"column":7,"nodeType":"225","endLine":32,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":21,"column":9,"nodeType":"225","endLine":21,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":24,"column":9,"nodeType":"225","endLine":24,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":16,"column":7,"nodeType":"225","endLine":16,"endColumn":41},{"ruleId":"236","severity":1,"message":"248","line":6,"column":8,"nodeType":"238","messageId":"239","endLine":6,"endColumn":12},{"ruleId":"246","severity":1,"message":"247","line":18,"column":9,"nodeType":"225","endLine":18,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":20,"column":9,"nodeType":"225","endLine":20,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":24,"column":9,"nodeType":"225","endLine":24,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":30,"column":9,"nodeType":"225","endLine":30,"endColumn":43},{"ruleId":"246","severity":1,"message":"247","line":31,"column":9,"nodeType":"225","endLine":31,"endColumn":43},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["252"],["253"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Home_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component My_Study must be in PascalCase or SCREAMING_SNAKE_CASE",["252"],["253"],"Imported JSX component React_study must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'List1' is defined but never used.","Identifier","unusedVar","'List2' is defined but never used.","'List3' is defined but never used.","'List4' is defined but never used.","'List5' is defined but never used.","'List6' is defined but never used.","'List7' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Img4' is defined but never used.",["252"],["253"],"'Img2' is defined but never used.","no-global-assign","no-unsafe-negation"]