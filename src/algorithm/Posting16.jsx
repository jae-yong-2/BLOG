import React, {Component} from 'react'
import Img1 from './img/1012_1.PNG'
import Img2 from './img/1012_2.PNG'

class Posting15 extends Component{
  render(){
    return(
      <div class="left">
      <h1>유기농 배추</h1><h3>35.745%</h3>
      <h4>
      이번 문제는 그래프 탐색문제로 생각할 수 있다.<br/><br/>
      문제는 이차원 배열이 주어졌을 때, 0으로 기본값을 주고 배추가 심어진 부분은 1의 값을 부여한다.<br/><br/>
      여기서 배추의 영역이 몇개인지 구하는 문제이다. 배추의 영역을 나누는 기준은 배추가 바로 옆칸에 연결이 연속적으로 되있는 부분을 뜻하며, 연결의 기준은 대각선을 제외한 1칸까지를 말한다. 예시로<br/><br/>
      <div className="code">00000101<br/><br/>00000111<br/><br/>11000000<br/><br/>01111001</div>
      이런 식으로 그래프가 나오면, 3개의 영역이 존재하는 것이다.<br/><br/>
      가장 먼저 생각해낸 아이디어는 "모든 배열을 돌면서 재귀적으로 탐색하는 방법"을 떠올렸다.<br/><br/>
      인덱스를 하나하나 돌면서 지금 해당하는 배열의 값이 1일 경우 그것과 연결된 영역을 재귀로 돌면서 일일이 모두 찾아주는 방법이다.<br/><br/>
      메인 코드는 다음과 같다.<br/><br/>
      <img src={Img1} className="code"/><br/><br/>
      배열의 타입은 pair을 사용하여 정의하였고, 이렇게 한 이유는 이미 탐색한 공간인지도 조건을 걸어주기 위함이다. second에서 탐색 유무를 정의해 주었다.<br/><br/>
      이후 모든 배열을 돌면서 현재 공간에 배추가 있고, 탐색한 적이 없으면 find라는 함수를 실행해서 같은 영역의 배추를 찾아 그 영역을 모두 탐색했다고 표시해준다.<br/><br/>
      find함수는 다음과 같다.<br/><br/>
      <img src={Img2} className="code"/><br/><br/>
      인접한 값이 비어있거나 탐색을 했을 경우 탈출을 하고, 아닌 경우 탐색을 했다고 표시를 한다. 이후 좌우 위아래를 재귀적으로 돌면서 탐색을 진행한다.<br/><br/>
      이번 문제는 재귀로 접근하면 어려움없이 풀 수 있는 문제이다.<br/><br/>
      이상 포스팅 끝<br/><br/>
      </h4>
      </div>
    );
  }
}
export default Posting15
